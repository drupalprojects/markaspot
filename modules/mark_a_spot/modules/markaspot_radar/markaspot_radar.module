<?php
/**
 * @file
 * Mark-a-Spot Radar module.
 * This module visualizes already reported service requests as clickable
 * points directly into the map.
 */

/**
 * Implements hook_page_build().
 */
function markaspot_radar_page_build(&$page) {

  $type = (isset($node)) ? $node->type : NULL;

  if (arg(1) == 'add' || arg(2) == "edit" && ($type != "page")) {
    drupal_add_css(drupal_get_path('profile', 'markaspot') . '/libraries/Leaflet.awesome-markers/dist/leaflet.awesome-markers.css');
    drupal_add_css(drupal_get_path('profile', 'markaspot') . '/libraries/markaspot-font/style.css');
    drupal_add_js(drupal_get_path('profile', 'markaspot') . '/libraries/Leaflet.awesome-markers/dist/leaflet.awesome-markers.min.js', array('scope' => 'footer', 'weight' => 7));
    drupal_add_js(drupal_get_path('profile', 'markaspot') . '/libraries/Leaflet.markercluster/dist/leaflet.markercluster.js', array('scope' => 'footer', 'weight' => 6));
    drupal_add_js(drupal_get_path('module', 'markaspot_radar') . '/markaspot_radar.js', array('scope' => 'footer', 'weight' => 5));
    drupal_add_css(drupal_get_path('module', 'markaspot_radar') . '/radar.css');

  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function markaspot_radar_form_report_node_form_alter(&$form, &$form_state, $form_id) {

  $form['field_geo'][LANGUAGE_NONE]['#prefix'] = '<div id="field-geo-add-more-wrapper"><div class="field-geo-radar"><i class="icon-eye-open"></i> ' . t('Check other reports by tapping or clicking the nearby circles') . '</div>';
}

/**
 * Implements hook_search_api_views_query_alter().
 */
function  markaspot_radar_search_api_views_query_alter(view &$view, SearchApiViewsQuery &$query) {

  $open_tids = array_values(variable_get('markaspot_logic_open311_status_open'));

  if ($view->name == 'markers' && isset($view->display['geojson_map'])){
    $params = drupal_get_query_parameters();
    if (isset($params['nwLat'])) {
      $status_archives = array_values(variable_get('markaspot_logic_archive_tids', markaspot_logic_defaults('markaspot_logic_archive_tids')));
      foreach ($query->where as &$condition_group) {
        foreach ($condition_group['conditions'] as &$condition) {
            $subfilter = $query->createFilter('AND');
            $base_filter = $query->createFilter('AND');

            $subfilter
              ->condition('field_geo:lat', $params['nwLat'] , '<=')
              ->condition('field_geo:lng', $params['nwLng'], '>=')
              ->condition('field_geo:lat', $params['seLat'], '>=')
              ->condition('field_geo:lng', $params['seLng'], '<=')
              ->condition('field_status', $open_tids, 'IN');
            $base_filter->filter($subfilter);
            $query->filter($base_filter);

        }
      }
    }
  }
}

function markaspot_radar_field_widget_geolocation_osm_form_alter(&$element, &$form_state, $context) {
  $element['address']['#description'] = t('Please also check the surroundings by clicking nearby circles.');
  // Add a css class to widget form elements for all fields of type mytype.
  if ($context['field']['type'] == '') {
    // Be sure not to overwrite existing attributes.
    $element['#attributes']['class'][] = 'myclass';
  }
}
