<?php
/**
 * @file
 * This module provides hooks for altering the report form and custom UUID generator
 * http://drupal.org/node/1588044
 */


/**
 * Implements hook_form_alter().
 */
function markaspot_uuid_form_alter(&$form, &$form_state, $form_id) {
  // Hide the title form field as it is generated via hook_insert
  if ($form_id == 'report_node_form') {
    $form['title']['#type'] = "hidden";
    $form['title']['#required'] = FALSE;
  }
}


/**
 * Generates an universally unique identifier.
 *
 * This function first checks for the PECL alternative for generating
 * universally unique identifiers. If that doesn't exist, then it falls back on
 * PHP for generating that.
 *
 * @return string
 *   An UUID, made up of year, month and 8 hex digits.
 * toDo: make this configurable
 */
function markaspot_uuid_generate_uuid() {

  $callback = '_uuid_generate_mas';
  return $callback();
}

/**
 * Generating a human readable UUID (not really GUID).
 *
 * @return string
 *   the UUID
 */
function _uuid_generate_mas() {

  // First get the last inserted node-id
  $query = db_select('node');
  $query->addExpression('COUNT(*)');
  $count = $query->execute()->fetchField();
  // Assuming other entities will be less frequently generated.
  // Taxonomies should still be unique.
  return sprintf('%04x',
    // 32 bits for "time_low".
    mt_rand(0, 65535),
    // 16 bits for "time_mid".
    mt_rand(0, 65535)) . '-' .$countount;
}


/**
 * Implements hook_node_insert().
 *
 * Need to update the title field with UUID
 * toDo: make this configurable
 */
function markaspot_uuid_node_insert($node) {

  if ($node->type == 'report' && variable_get('uuid_title') == 1) {

    // Instead of contributed module auto entity_title:
    // Get the service name by ID and update the title field.
    $tid = $node->field_category[LANGUAGE_NONE][0]['tid'];
    $service = taxonomy_term_load($tid);

    db_update('node')
      ->fields(array(
        'title' => '#' . $node->uuid . " " . $service->name,
      ))
      ->condition('nid', $node->nid, '=')
      ->execute();

    db_update('node_revision')
      ->fields(array(
        'title' => '#' . $node->uuid . " " . $service->name,
      ))
      ->condition('nid', $node->nid, '=')
      ->execute();
  }
}
