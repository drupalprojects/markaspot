<?php
/**
 * Implements hook_cron().
 */
function markaspot_archive_cron() {
  /*
   *  // Short-running operation example, not using a queue:
   *  // Delete all expired records since the last cron run.
   *  $expires = variable_get('mymodule_cron_last_run', REQUEST_TIME);
   *  db_delete('mymodule_table')
   *    ->condition('expires', $expires, '>=')
   *    ->execute();
   *  variable_set('mymodule_cron_last_run', REQUEST_TIME);
   *
   *  // Long-running operation example, leveraging a queue:
   *  // Fetch feeds from other sites.
   *  $result = db_query('SELECT * FROM {aggregator_feed} WHERE checked + refresh < :time AND refresh != :never', array(
   *    ':time' => REQUEST_TIME,
   *    ':never' => AGGREGATOR_CLEAR_NEVER,
   *  ));
   *  $queue = DrupalQueue::get('aggregator_feeds');
   *  foreach ($result as $feed) {
   *    $queue->createItem($feed);
   *  }
   */
   /* Your code here */
  $query = new EntityFieldQuery();
  $query->entityCondition('entity_type', 'node')
    ->propertyCondition('status', 1)
    ->propertyCondition('type', array('report'))
//     ->propertyCondition('created', REQUEST_TIME - 3600, '>='); // created within the past 1 hour
    ->propertyOrderBy('created', 'DESC');
  $result = $query->execute();

  $nodes = node_load_multiple(array_keys($result['node']));

  $period = variable_get('archive_days') * 86400;

  foreach($nodes as $node){
    if ($node->changed <= time() - $period && $node->field_status['und'][0]['tid'] == 3) {
      $node->field_status['und'][0]['tid'] = "4";
      node_save($node);
    }
  }

}


